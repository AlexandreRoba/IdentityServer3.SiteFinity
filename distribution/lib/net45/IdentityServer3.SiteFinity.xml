<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IdentityServer3.SiteFinity</name>
    </assembly>
    <members>
        <member name="T:IdentityServer.SiteFinity.ResponseHandling.SignInResponseGenerator">
            <summary>
            SignIn Response Generator
            </summary>
        </member>
        <member name="M:IdentityServer.SiteFinity.ResponseHandling.SignInResponseGenerator.#ctor(IdentityServer.SiteFinity.Utilities.HttpUtility,IdentityServer.SiteFinity.Token.SimpleWebTokenParser)">
            <summary>
            Constructor
            </summary>
            <param name="httpUtility">The utility class used to url encode and decode</param>
            <param name="simpleWebTokenParser">the parser class used to parse the simple web token</param>
        </member>
        <member name="M:IdentityServer.SiteFinity.ResponseHandling.SignInResponseGenerator.GenerateResponseAsync(IdentityServer.SiteFinity.Services.SignInRequestMessage,IdentityServer.SiteFinity.Validation.SignInValidationResult,System.Net.Http.HttpRequestMessage)">
            <summary>
            Generate the reponse async
            </summary>
            <param name="message">The request input message</param>
            <param name="result">The validation result</param>
            <param name="request">The original http request</param>
            <returns></returns>
        </member>
        <member name="T:IdentityServer.SiteFinity.Services.InMemoryRelyingPartyService">
            <summary>
            In-memory service for relying party configuration
            </summary>
        </member>
        <member name="T:IdentityServer.SiteFinity.Services.ISiteFinityRelyingPartyService">
            <summary>
            Implements retrieval of SiteFinity relying party configuration
            </summary>
        </member>
        <member name="M:IdentityServer.SiteFinity.Services.ISiteFinityRelyingPartyService.GetByRealmAsync(System.String)">
            <summary>
            Retrieves a sitefinity relying party by realm.
            </summary>
            <param name="realm">The realm.</param>
            <returns>The sitefinity relying party</returns>
        </member>
        <member name="M:IdentityServer.SiteFinity.Services.InMemoryRelyingPartyService.#ctor(System.Collections.Generic.IEnumerable{IdentityServer.SiteFinity.Models.SiteFinityRelyingParty})">
            <summary>
            Initializes a new instance of the <see cref="T:IdentityServer.SiteFinity.Services.InMemoryRelyingPartyService"/> class.
            </summary>
            <param name="rps">The RPS.</param>
        </member>
        <member name="M:IdentityServer.SiteFinity.Services.InMemoryRelyingPartyService.GetByRealmAsync(System.String)">
            <summary>
            Retrieves a relying party by realm.
            </summary>
            <param name="realm">The realm.</param>
            <returns>
            The relying party
            </returns>
        </member>
        <member name="T:IdentityServer.SiteFinity.Services.SignInRequestMessage">
            <summary>
            The Sign in Request message
            </summary>
        </member>
        <member name="M:IdentityServer.SiteFinity.Services.SignInRequestMessage.#ctor(System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Value constructor
            </summary>
            <param name="realm">The realm of the sign request</param>
            <param name="tokenType">The token type of the signin request</param>
            <param name="redirectUri">The redirect URI from the sign in request</param>
            <param name="deflate">A flag that idicate if the sign in request is defalted or not</param>
            <param name="signOut">A flag that indicate if the signin request is a signout request</param>
        </member>
        <member name="P:IdentityServer.SiteFinity.Services.SignInRequestMessage.Realm">
            <summary>
            The realm of the sign request
            </summary>
        </member>
        <member name="P:IdentityServer.SiteFinity.Services.SignInRequestMessage.TokenType">
            <summary>
            The token type of the signin request
            </summary>
        </member>
        <member name="P:IdentityServer.SiteFinity.Services.SignInRequestMessage.RedirectUri">
            <summary>
            The redirect URI from the sign in request
            </summary>
        </member>
        <member name="P:IdentityServer.SiteFinity.Services.SignInRequestMessage.Deflate">
            <summary>
            A flag that idicate if the sign in request is defalted or not
            </summary>
        </member>
        <member name="P:IdentityServer.SiteFinity.Services.SignInRequestMessage.SignOut">
            <summary>
            A flag that indicate if the signin request is a signout request
            </summary>
        </member>
        <member name="T:IdentityServer.SiteFinity.Token.SimpleWebTokenParser">
            <summary>
            The parser for SimpleWebToken
            </summary>
        </member>
        <member name="M:IdentityServer.SiteFinity.Token.SimpleWebTokenParser.#ctor(IdentityServer.SiteFinity.Utilities.HttpUtility)">
            <summary>
            Constructor
            </summary>
            <param name="httpUtility">the utility class that should be used for url encoding and url decoding</param>
        </member>
        <member name="P:IdentityServer.SiteFinity.Token.SimpleWebTokenParser.EncryptionLabel">
            <summary>
            Gets the encryption used for the token
            </summary>
        </member>
        <member name="T:IdentityServer.SiteFinity.Models.SiteFinityRelyingParty">
            <summary>
            Models a Sitefinity Site
            </summary>
        </member>
        <member name="M:IdentityServer.SiteFinity.Models.SiteFinityRelyingParty.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdentityServer.SiteFinity.Models.SiteFinityRelyingParty.Name">
            <summary>
            Gets or sets the display name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:IdentityServer.SiteFinity.Models.SiteFinityRelyingParty.Enabled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:IdentityServer.SiteFinity.Models.SiteFinityRelyingParty"/> is enabled.
            </summary>
            <value>
              <c>true</c> if enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:IdentityServer.SiteFinity.Models.SiteFinityRelyingParty.Realm">
            <summary>
            Gets or sets the realm.
            </summary>
            <value>
            The realm.
            </value>
        </member>
        <member name="P:IdentityServer.SiteFinity.Models.SiteFinityRelyingParty.ReplyUrl">
            <summary>
            Get or set the allowed reply url
            </summary>
            <value>
            The reply url
            </value>
        </member>
        <member name="P:IdentityServer.SiteFinity.Models.SiteFinityRelyingParty.Key">
            <summary>
            Gets or sets the Sitefinity ShareSecret
            </summary>
            <value>
            The SiteFinity Secret Key
            </value>
        </member>
        <member name="P:IdentityServer.SiteFinity.Models.SiteFinityRelyingParty.Domain">
            <summary>
            Gets or shared the Sitefinity domain.
            This is the name of the user Provider on SiteFinity
            <remarks>Teh default domain is 'Default' but it could be 'LdapProvider' is using user from AD.</remarks> 
            </summary>
        </member>
        <member name="T:IdentityServer.SiteFinity.Token.SitefinityClaimTypes">
            <summary>
            A list of predifined Claims
            </summary>
        </member>
        <member name="T:IdentityServer.SiteFinity.Configuration.PluginAppBuilderExtensions">
            <summary>
            Extension methods for IAppBuilder to configure the WS-Federation plugin
            </summary>
        </member>
        <member name="M:IdentityServer.SiteFinity.Configuration.PluginAppBuilderExtensions.UseSiteFinityPlugin(Owin.IAppBuilder,IdentityServer.SiteFinity.Configuration.SiteFinityPluginOptions)">
            <summary>
            Add the WS-Federation plugin to the IdentityServer pipeline.
            </summary>
            <param name="app">The appBuilder.</param>
            <param name="options">The options.</param>
            <returns>The appBuilder</returns>
            <exception cref="T:System.ArgumentNullException">options</exception>
        </member>
        <member name="T:IdentityServer.SiteFinity.Configuration.SiteFinityPluginOptions">
            <summary>
            The options available for the Sitefinity Plugin
            </summary>
        </member>
        <member name="M:IdentityServer.SiteFinity.Configuration.SiteFinityPluginOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IdentityServer.SiteFinity.Configuration.SiteFinityPluginOptions"/> class.
            </summary>
        </member>
        <member name="M:IdentityServer.SiteFinity.Configuration.SiteFinityPluginOptions.#ctor(Thinktecture.IdentityServer.Core.Configuration.IdentityServerOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:IdentityServer.SiteFinity.Configuration.SiteFinityPluginOptions"/> class.
            Assigns the IdentityServerOptions and the Factory from the IdentityServerOptions.
            </summary>
            <param name="options">The options.</param>
            <exception cref="T:System.ArgumentNullException">options</exception>
        </member>
        <member name="M:IdentityServer.SiteFinity.Configuration.SiteFinityPluginOptions.Validate">
            <summary>
            Validates this instance.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            Factory not configured
            or
            DataProtector not configured
            or
            Options not configured
            </exception>
        </member>
        <member name="P:IdentityServer.SiteFinity.Configuration.SiteFinityPluginOptions.IdentityServerOptions">
            <summary>
            Gets or sets the identity server options.
            </summary>
            <value>
            The identity server options.
            </value>
        </member>
        <member name="P:IdentityServer.SiteFinity.Configuration.SiteFinityPluginOptions.MapPath">
            <summary>
            Gets or sets the map path.
            </summary>
            <value>
            The map path.
            </value>
        </member>
        <member name="P:IdentityServer.SiteFinity.Configuration.SiteFinityPluginOptions.Factory">
            <summary>
            Gets or sets the WS-Federation service factory.
            </summary>
            <value>
            The factory.
            </value>
        </member>
        <member name="T:IdentityServer.SiteFinity.Configuration.SiteFinityServiceFactory">
            <summary>
            The factory for the sitefinity plugin 
            </summary>
        </member>
        <member name="M:IdentityServer.SiteFinity.Configuration.SiteFinityServiceFactory.Register``1(Thinktecture.IdentityServer.Core.Configuration.Registration{``0})">
            <summary>
            Adds a registration to the dependency list
            </summary>
            <typeparam name="T">Type of the dependency</typeparam>
            <param name="registration">The registration.</param>
        </member>
        <member name="M:IdentityServer.SiteFinity.Configuration.SiteFinityServiceFactory.#ctor(Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:IdentityServer.SiteFinity.Configuration.SiteFinityServiceFactory"/> class.
            </summary>
            <param name="factory">The factory.</param>
        </member>
        <member name="M:IdentityServer.SiteFinity.Configuration.SiteFinityServiceFactory.Validate">
            <summary>
            Validates this instance.
            </summary>
        </member>
        <member name="P:IdentityServer.SiteFinity.Configuration.SiteFinityServiceFactory.UserService">
            <summary>
            Gets or sets the user service.
            </summary>
            <value>
            The user service.
            </value>
        </member>
        <member name="P:IdentityServer.SiteFinity.Configuration.SiteFinityServiceFactory.Registrations">
            <summary>
            Gets the a list of additional dependencies.
            </summary>
            <value>
            The dependencies.
            </value>
        </member>
        <member name="P:IdentityServer.SiteFinity.Configuration.SiteFinityServiceFactory.SiteFinityRelyingPartyService">
            <summary>
            Gets or sets the SiteFinity relying party service.
            </summary>
            <value>
            The relying party service.
            </value>
        </member>
        <member name="T:IdentityServer.SiteFinity.Token.SimpleWebToken">
            <summary>
            SimpleWeb Token class
            </summary>
        </member>
        <member name="M:IdentityServer.SiteFinity.Token.SimpleWebToken.#ctor(System.String,System.String,System.String,System.DateTime,System.DateTime,System.Collections.Generic.IList{System.Security.Claims.Claim},System.String)">
            <summary>
            Creates a new instance of SimpleWebToken
            </summary>
            <param name="tokenId"></param>
            <param name="issuer"></param>
            <param name="audience"></param>
            <param name="validFrom"></param>
            <param name="validTo"></param>
            <param name="claims"></param>
            <param name="rawToken"></param>
        </member>
        <member name="P:IdentityServer.SiteFinity.Token.SimpleWebToken.Id">
            <summary>
            Gets the token id
            </summary>
        </member>
        <member name="P:IdentityServer.SiteFinity.Token.SimpleWebToken.ValidFrom">
            <summary>
            Gets the Valid From date
            </summary>
        </member>
        <member name="P:IdentityServer.SiteFinity.Token.SimpleWebToken.ValidTo">
            <summary>
            Gets the Valid to Date
            </summary>
        </member>
        <member name="P:IdentityServer.SiteFinity.Token.SimpleWebToken.Issuer">
            <summary>
            Gets the Issuer realm
            </summary>
        </member>
        <member name="P:IdentityServer.SiteFinity.Token.SimpleWebToken.Audience">
            <summary>
            Gets the audience realm
            </summary>
        </member>
        <member name="P:IdentityServer.SiteFinity.Token.SimpleWebToken.Claims">
            <summary>
            Gets the list of Claims in the token
            </summary>
        </member>
        <member name="P:IdentityServer.SiteFinity.Token.SimpleWebToken.RawToken">
            <summary>
            Gets the Raw version of the token
            </summary>
        </member>
        <member name="T:IdentityServer.SiteFinity.SiteFinityController">
            <summary>
            The Controller that handles the SignRequest
            </summary>
        </member>
        <member name="M:IdentityServer.SiteFinity.SiteFinityController.#ctor(IdentityServer.SiteFinity.Validation.SignInValidator,IdentityServer.SiteFinity.ResponseHandling.SignInResponseGenerator,IdentityServer.SiteFinity.Utilities.HttpUtility)">
            <summary>
            Constructor
            </summary>
            <param name="validator">The validator class</param>
            <param name="signInResponseGenerator">The response generator</param>
            <param name="httpUtility">The utily class used for url encoding and url decoding</param>
        </member>
        <member name="T:IdentityServer.SiteFinity.Utilities.HttpUtility">
            <summary>
            Class that handles the Url Encoding
            </summary>
            <remarks>
            This class is here to support the difference in the encoding betwen the System.Web urlencode/UrlDecode and the Katana/Owin supported encoding.
            The difference relies in upper and lower caps. 
            </remarks>
        </member>
        <member name="M:IdentityServer.SiteFinity.Utilities.HttpUtility.UrlEncode(System.String)">
            <summary>
            Url encode a value
            </summary>
            <param name="input">The value to be encoded</param>
            <returns>The url encoded value</returns>
        </member>
        <member name="M:IdentityServer.SiteFinity.Utilities.HttpUtility.UrlDecode(System.String)">
            <summary>
            URlDecode a value
            </summary>
            <param name="input">The value to be decoded</param>
            <returns>The decoded value</returns>
        </member>
        <member name="T:IdentityServer.SiteFinity.Validation.SignInValidationResult">
            <summary>
            The result of the validation
            </summary>
        </member>
        <member name="P:IdentityServer.SiteFinity.Validation.SignInValidationResult.Realm">
            <summary>
            The sign request realm
            </summary>
        </member>
        <member name="P:IdentityServer.SiteFinity.Validation.SignInValidationResult.IsSignInRequired">
            <summary>
            Flag indicating if the request require signin
            </summary>
        </member>
        <member name="P:IdentityServer.SiteFinity.Validation.SignInValidationResult.IsError">
            <summary>
            Flag indicating if the validation failed
            </summary>
        </member>
        <member name="P:IdentityServer.SiteFinity.Validation.SignInValidationResult.Error">
            <summary>
            The validation error message
            </summary>
        </member>
        <member name="P:IdentityServer.SiteFinity.Validation.SignInValidationResult.SiteFinityRelyingParty">
            <summary>
            The relying party that matches the signin request
            </summary>
        </member>
        <member name="P:IdentityServer.SiteFinity.Validation.SignInValidationResult.SignInRequestMessage">
            <summary>
            The Sign in request message
            </summary>
        </member>
        <member name="P:IdentityServer.SiteFinity.Validation.SignInValidationResult.Subject">
            <summary>
            The sign in subject claim
            </summary>
        </member>
        <member name="P:IdentityServer.SiteFinity.Validation.SignInValidationResult.ReplyUrl">
            <summary>
            The reqeusted reply URL
            </summary>
        </member>
        <member name="P:IdentityServer.SiteFinity.Validation.SignInValidationResult.Issuer">
            <summary>
            The sign is request issuer
            </summary>
        </member>
        <member name="P:IdentityServer.SiteFinity.Validation.SignInValidationResult.IsSignout">
            <summary>
            A flag that indicate if the request was a sign out request
            </summary>
        </member>
        <member name="T:IdentityServer.SiteFinity.Validation.SignInValidator">
            <summary>
            Class used to validate a sign in request
            </summary>
        </member>
        <member name="M:IdentityServer.SiteFinity.Validation.SignInValidator.#ctor(IdentityServer.SiteFinity.Services.ISiteFinityRelyingPartyService)">
            <summary>
            Constructor
            </summary>
            <param name="siteFinityRelyingPartyService">The Relying party used for the validation</param>
        </member>
        <member name="M:IdentityServer.SiteFinity.Validation.SignInValidator.ValidateAsync(System.String,IdentityServer.SiteFinity.Services.SignInRequestMessage,System.Security.Claims.ClaimsPrincipal)">
            <summary>
            This method validates the Sign in request
            </summary>
            <param name="requestAbsoluteUri">the url of the request</param>
            <param name="message">the sign in request message</param>
            <param name="subject">The sign in subject</param>
            <returns>The validation result</returns>
        </member>
    </members>
</doc>
